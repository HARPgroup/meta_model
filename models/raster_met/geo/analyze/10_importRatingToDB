#!/bin/bash
# loads the args, the raster specific config and change to temp dir
geo_config=`find_config geo.config`
if [ "$geo_config" = "" ]; then
  geo_config="$META_MODEL_ROOT/models/raster_met/geo/geo.config"
fi
. $geo_config

#Put the new ratings files with variables for dh_timeseries onto dbase2
baseFileName=`basename $RATINGS_TODBASE_FILE`
echo "sftp $db_host:/tmp/ <<< put ${RATINGS_TODBASE_FILE}"
sftp $db_host:"/tmp/" <<< "put ${RATINGS_TODBASE_FILE}"
echo "File put on ${db_host}, now inserting files..."
#Create a temporary table to read in the ratings files into dbase2. Then join and insert into dh_timeseries
ratings_sql="
CREATE TEMPORARY TABLE tmp_ratings as
SELECT tstime,tsendtime,tsvalue,featureid,entity_type
FROM dh_timeseries
LIMIT 0;

COPY tmp_ratings FROM '/tmp/${baseFileName}' with csv header;

\\set ratingsVarkey '$RATINGS_VARKEY' \n
\\set scenarioPropName '$SCENARIO_PROP_NAME' \n
\\set hydrocode  '$coverage' \n
SELECT hydroid AS ratings FROM dh_variabledefinition WHERE varkey = :'ratingsVarkey' \\gset \n

INSERT INTO dh_timeseries ( tstime,tsendtime, tsvalue, featureid, varid, entity_type)
SELECT a.tstime, a.tsendtime, a.tsvalue, a.featureid, v.hydroid, a.entity_type
FROM tmp_ratings AS a
LEFT JOIN dh_variabledefinition as v
ON v.hydroid = :'ratings'
LEFT JOIN dh_timeseries AS dupe
ON (
 a.tstime = dupe.tstime 
 AND a.tsendtime = dupe.tsendtime
 AND a.featureid = dupe.featureid
 AND a.entity_type = dupe.entity_type
 AND v.hydroid = dupe.varid
)
WHERE dupe.tid IS NULL;

\\set ratingsVarkey '$RATINGS_VARKEY' \n
\\set scenarioPropName '$SCENARIO_PROP_NAME' \n
\\set hydrocode  '$coverage' \n
SELECT hydroid AS ratings FROM dh_variabledefinition WHERE varkey = :'ratingsVarkey' \\gset \n

UPDATE dh_timeseries AS a 
SET
    tstime = b.tstime,
    tsendtime = b.tsendtime,
	tsvalue = b.tsvalue,
	featureid = b.featureid,
	varid = b.varid,
	entity_type = b.entity_type
FROM(
	SELECT a.tstime, a.tsendtime, a.tsvalue, a.featureid, dupe.varid as varid, a.entity_type
	FROM dh_timeseries AS dupe
	INNER JOIN tmp_ratings AS a
	ON (
		dupe.tstime = a.tstime 
		AND dupe.tsendtime = a.tsendtime
		AND dupe.featureid = a.featureid
		AND dupe.entity_type = a.entity_type
		AND dupe.varid = :'ratings'
	)
) as b
WHERE a.varid = :'ratings'
  AND a.tstime IN (SELECT tstime from tmp_ratings)
  AND a.tsendtime IN (SELECT tsendtime from tmp_ratings)
  AND a.featureid IN (SELECT featureid from tmp_ratings)
  AND a.entity_type IN (SELECT entity_type from tmp_ratings)
"

# turn off the expansion of the asterisk
set -f
#Delete previous dh_timeseries entries
echo "Writing sql insert to $RATINGS_SQL_FILE"
echo $ratings_sql
echo -e $ratings_sql > $RATINGS_SQL_FILE 
cat $RATINGS_SQL_FILE | psql -h $db_host $db_name
echo "Finshed running query."