#!/bin/bash
# loads the args, the raster specific config and change to tempdir
alt_config=`find_config alt.config`
if [ "$alt_config" = "" ]; then
  alt_config="$META_MODEL_ROOT/models/raster_met/alt/alt.config"
fi
. $alt_config

# First we determine where the source file is.
# In general, many of our BASELINE data sets may NOT have been made from 
# rasters and residing in $MET_EXPORT_DIR/$BASELINE_MET_SCENARIO/et/${coverage}_et.csv
# But some may, so we check here. And then look for lseg_csv versions made from C++ code
if [ ! -e $BASELINE_ET_FILE ]; then
  echo "Cannot find $BASELINE_ET_FILE. Looking for $BASEMODEL_ET_FILE"
  if [ ! -e $BASEMODEL_ET_FILE ]; then
    echo "Error: Cannot find $BASEMODEL_ET_FILE . Exiting." 
    echo "Error: Cannot find $BASEMODEL_ET_FILE . Exiting." > $tmpdir/problem
    exit
  fi
fi

# once we have the ET file and TEMP file we can scale TEMP then calculate ET
output_file=`basename $BASELINE_ET_FILE`
echo "Converting WDM headerless file to CSV."
echo "Rscript $META_MODEL_ROOT/scripts/wdm/wdm_export_csv_format.R $BASEMODEL_ET_FILE $output_file et_in featureid $segment"
Rscript $META_MODEL_ROOT/scripts/wdm/wdm_export_csv_format.R $BASEMODEL_ET_FILE $output_file et_in featureid $segment
# Here we install intoa BASELINE_ET_FILE since this is in the proper format, AND in the BASELINE scenario
# directory tree - since this file did not exist it is OK to write it, and later we will create a 
# modified version of this file in the $scenario data tree
echo "install -D $output_file $BASELINE_ET_FILE"
install -D $output_file $BASELINE_ET_FILE
