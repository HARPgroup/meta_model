#!/bin/bash
# expects that datasource is defined
if [ -z ${ddate+x} ]; then 
  echo "Variable 'ddate' (download date) must be defined when calling raster.config. Exiting."
  exit
fi

db_host="dbase2"
db_port="5432"
db_name="drupal.dh03"
tz=""
MET_SCRIPT_PATH="/opt/model/model_meterology/sh"
maskExtent='/backup/meteorology/cbp_extent.csv'
yr=`date -d "$ddate" +%Y`
mo=`date -d "$ddate" +%m`
da=`date -d "$ddate" +%d`
jday=`date -d "$ddate" +%j`
ymd="$yr$mo$da"

src_files=""
import_files=""
case $datasource in
  PRISM)
  declare -A config=(
   ["entity_type"]="dh_feature"
   ["ext"]="_CBP.gtiff"
   ["scratchdir"]="/tmp"
   ["basedir"]="/backup/meteorology"
   ["datasource"]="PRISM"
   ["dataset"]="PRISM_precip_"
   ["varkey"]="prism_mod_daily"
   ["extent_hydrocode"]="cbp6_met_coverage"
   ["extent_ftype"]="cbp_met_grid"
   ["extent_bundle"]="landunit"
  )
  ;;

  nldas2)
  declare -A config=(
   ["entity_type"]="dh_feature"
   ["ext"]="_CBP.gtiff"
   ["scratchdir"]="/tmp"
   ["basedir"]="/backup/meteorology"
   ["datasource"]="nldas2"
   ["dataset"]="nldas2_precip_"
   ["varkey"]="nldas2_obs_hourly"
   ["extent_hydrocode"]="cbp6_met_coverage"
   ["extent_ftype"]="cbp_met_grid"
   ["extent_bundle"]="landunit"
  )
  # files to import can be inferred
  base_dir=${config["basedir"]}
  final_ext=${config["ext"]}
  if [ -d "$base_dir/$yr" ]; then
    if [ -d "$base_dir/$yr/$jday" ]; then
      src_dir="$base_dir/$yr/$jday"
      src_files=`ls $src_dir/*.grb`
      # this will have a list of geotiff if the files have been processed
      # but will omit intermediates.
      import_files=`ls $src_dir/*.gtiff | grep -v repro.gtiff `
      # specify the location to store things in
      archive_dir=$src_dir
      declare -a name import_times
      for i in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 23; do 
        hr2digit=`printf %02d $i`
        hr4digit="${hr2digit}00"
        fname=`ls $src_dir/*.${hr4digit}.*.grb_CBP.gtiff`
        TIFFTAG_DATETIME="${yr}-${mo}-${da}T${hr2digit}:00:00Z"
        # edit file meta data to set date time for later use
        gdal_edit.py $fname -mo "TIFFTAG_DATETIME=${TIFFTAG_DATETIME}"
      done
    fi
  fi
  ;;
esac

